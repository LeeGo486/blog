<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.2.3
    site: https://github.com/ksky521/nodePPT
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>npm - By 大果</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    <link rel="stylesheet" media="print" href="./css/pdf.css">
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide fill" style="background-image:url('/imgs/bg.jpeg')"><section class="slide-wrapper"><hgroup>
<h1>一个 npm 的完整历程</h1>

</hgroup><article>

<p>大果, 2015.7.2</p>

</article></section></slide>
<slide class="slide fill" style="background-image:url('/imgs/bg2.png')"><section class="slide-wrapper"><hgroup>
<h1>20 行的 npm</h1>

</hgroup><article>

<ul>
<li><a href="https://github.com/sindresorhus" target="_blank">sindresorhus</a> &amp; <a href="https://github.com/kevva" target="_blank">kevva</a>: <blockquote>
<p><a href="https://github.com/kevva/wifi-name/blob/master/index.js" target="_blank">wifi-name</a> = osx-wifi-name + win-wifi-name + linux-wifi-name</p>
</blockquote>
</li>
<li>功能更加独立，可以把重复的事情做好</li>
<li>可以开心的刷 github ...</li>
<li>但是，真的有点奇葩</li>
</ul>

</article></section></slide>
<slide class="slide fill" style="background-image:url('/imgs/bg2.png')"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>TDD: 测试驱动开发</h1>
<hr>
<p>TDD 是极限编程中倡导的程序开发方法，倡导先写测试程序，然后编码实现其功能。即测试先行。</p>
<hr>
<pre><code class="javascript">describe(&#39;test for getGitBranchName method&#39;, function() {

  it(&#39;should return a string(branch name) when the directory is a git repo&#39;, function(done) {

    // this repo directory path
    var dirPath = path.resolve(__dirname, &#39;../&#39;);

    getGitBranchName(dirPath, function(err, branchName) {
      should.not.exist(err);
      (branchName).should.be.a.String;
      done();
    });

  });
});
</code></pre>

</article></section></slide>
<slide class="slide fill" style="background-image:url('/imgs/bg2.png')"><section class="slide-wrapper"><hgroup>
<h1>nodejs 的单元测试</h1>

</hgroup><article>

<ul>
<li>测试框架：mocha</li>
<li>断言库：assert/chai/shouldjs</li>
<li>覆盖率：istanbul</li>
</ul>
<p><img src="./imgs/mocha.png" alt="" style="width:70%;top:200px;right:-200px;left:auto;min-width:0;min-height:0;"></p>

</article></section></slide>
<slide class="slide fill" style="background-image:url('/imgs/bg2.png')"><section class="slide-wrapper"><hgroup>
<h1>编码实现</h1>
<ul>
<li><code>/.git/HEAD</code>: 无法支持 submodule</li>
<li>解析 <code>git branch</code> 的输出</li>
</ul>

</hgroup><article>

<pre><code class="javascript">module.exports = function(dirPath, callback) {

  var gitPath = path.resolve(dirPath, &#39;./.git&#39;);

  // parse `git branch` output
  execFile(&#39;git&#39;, [&#39;--work-tree=&#39; + dirPath, &#39;--git-dir=&#39; + gitPath, &#39;branch&#39;], function(err, stdout, stderr) {

    if (err) {
      return callback(err);
    }

    try {
      var branchName = stdout === &#39;&#39;? &#39;&#39;: stdout.match(/\*\s(.*)\n/)[1];
      callback(null, branchName);
    } catch(err) {
      callback(new Error(&#39;Parse the git branch stdout error&#39;));
      console.error(&#39;output: %s&#39;, stdout);
    }
  });
};
</code></pre>

</article></section></slide>
<slide class="slide fill" style="background-image:url('/imgs/bg2.png')"><section class="slide-wrapper"><hgroup>
<h1>持续集成</h1>

</hgroup><article>

<ul>
<li>单元测试集成：<a href="https://travis-ci.org/imsobear/git-branch-name" target="_blank">travis</a></li>
<li>覆盖率集成：<a href="https://coveralls.io/r/imsobear/git-branch-name?branch=master" target="_blank">coveralls</a></li>
</ul>
<p><img src="./imgs/tt.png" alt="" style="width:70%;top:300px;right:-200px;left:auto;min-width:0;min-height:0;"></p>

</article></section></slide>
<slide class="slide fill" style="background-image:url('/imgs/bg2.png')"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>publish</h1>
<hr>
<ul>
<li>npm 命名：<code>git-branch-name</code>, not <code>GitBranchName</code></li>
<li>npm 的版本号与 git tag 一致</li>
</ul>
<hr>
<pre><code>git tag -a 1.0.0 -m &#39;实现解析 git branch 输出&#39;
git push origin 1.0.0

npm publish
</code></pre>
</article></section></slide>
<slide class="slide fill" style="background-image:url('/imgs/bg2.png')"><section class="slide-wrapper"><hgroup>
<h1>One more thing</h1>

</hgroup><article>

<ul>
<li>遵循 semver 规范</li>
<li>README</li>
</ul>
<p><img src="./imgs/readme.png" alt="" style="width:60%;top:50px;right:-100px;left:auto;min-width:0;min-height:0;max-height:1000px;"></p>
<style>
    slides>slide .slide-wrapper {
        text-align: left !important;
    }
</style>
</article></section></slide>
        <!--slide class="slide thank-you-slide segue nobackground">
            <article class="flexbox vleft auto-fadein">
                <h2>Q &amp; A</h2>
                <h3>&lt;Thank You!&gt;</h3>
            </article>
        </slide-->
        <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
              <h2 style="color: white;">Powered By nodePPT v1.2.3</h2>
            </article>
          </slide>
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = location.pathname.split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'move',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/hljs-0.8.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>

<link rel="stylesheet" href="./css/theme.moon.css">
<!--placeholder-->
</body>
</html>
